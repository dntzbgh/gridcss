@use 'fg_config' as FG_CONFIGS;
//todo
// - add col offset
// - fix positioning when changing directions
// - include classes for breakes
.fg-grid {
  width: 100%;
  height: 100%;
  //overflow: hidden;
  // show border to see the limits of the grid
  @if (FG_CONFIGS.$fg_debugging) {
    border: solid 1px black;
    box-sizing: border-box;
    padding: 0;
    margin: 0;
  }

  .fg-row {
    display: flex;
    flex-direction: row;
    width: 100%;
    height: 100%;
    flex-wrap: wrap;
    box-sizing: inherit;
    flex: 1 1 (100%/FG_CONFIGS.$fg_max_grid_columns);
    @if (FG_CONFIGS.$fg_debugging) {
      border: dot-dash 1px #46de1a;
    }

    .fg-col {
      box-sizing: inherit;
      display: flex;
      flex-direction: column;
      flex: 1 0 (100%/FG_CONFIGS.$fg_max_grid_columns);
      background-color: #107d8e;
      align-items: flex-start;

      // position inside elements
      &.fg-h-center {
        align-items: center;
      }

      &.fg-h-right {
        align-items: flex-end;
      }

      &.fg-h-left {
        align-items: flex-start;
      }

      &.fg-v-top {
        justify-content: flex-start;
      }

      &.fg-v-bottom {
        justify-content: flex-end;
      }

      &.fg-v-center {
        justify-content: center;
      }


      @if (FG_CONFIGS.$fg_debugging) {
        border: dotted 1px #e70b37;
        > * {
          padding: 0;
          margin: 0;
        }
      }

      @include FG_CONFIGS.break {
        flex-direction: row !important;
        flex: 1 1 100% !important;
      }

    }

    @if (FG_CONFIGS.$fg_hide_excess) {
      > :not(.fg-col) {
        display: none;
      }
    }

  }

  @if (not FG_CONFIGS.$fg_hide_excess) {
    > :not(.fg-row) {
      display: none;
    }
  }

}
